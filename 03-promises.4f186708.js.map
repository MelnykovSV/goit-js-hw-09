{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAAUC,IAC9BA,EAAEC,iBACF,MAAMC,EAAO,IAAIC,SAASH,EAAEI,eACtBC,EAAS,GAEf,IAAKC,OAAQ,IAAIJ,GACfK,QAAQC,IAAI,GAAGF,KAAK,aAAaA,KAAK,MACtCD,EAAOC,KAAK,IAAMA,KAAK,GAGzBV,EAAKa,QAEL,MAEMC,EA4BR,UAA0BC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,IACvC,MAAMC,EAAS,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,IAC1BD,EAAOE,KAAKC,SAASN,GAASI,EAAIE,SAASL,IAG7C,OAAOE,C,CApCQI,CAAiBb,GAEHc,KAAI,CAACR,EAAOS,IACvB,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBF,EAAY,QAAST,OAEhDY,EAAK,sBAAoBH,EAAU,QAAST,MAAU,GAEzDA,EAAM,MAMb,IAAKiB,OAAOlB,EACVkB,IACGC,MAAKC,IACJC,EAAArC,GAASsC,OAAOC,QAAQH,EAAE,IAE3BI,OAAMC,IACLJ,EAAArC,GAASsC,OAAOI,QAAQD,EAAI,GAC5B,IAcRJ,EAAArC,GAASsC,OAAOK,KAAK","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  const data = new FormData(e.currentTarget);\n  const params = {};\n\n  for (item of [...data]) {\n    console.log(`${item[0]} value: ${item[1]}`);\n    params[item[0]] = item[1];\n  }\n\n  form.reset();\n\n  const delays = buildDelaysArray(params);\n\n  const promisesArray = delays.map((delay, position) => {\n    const promise = new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n        } else {\n          reject(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n        }\n      }, delay);\n    });\n\n    return promise;\n  });\n\n  for (ele of promisesArray) {\n    ele\n      .then(a => {\n        Notiflix.Notify.success(a);\n      })\n      .catch(err => {\n        Notiflix.Notify.failure(err);\n      });\n  }\n});\n\n//creates array of steps from data\n\nfunction buildDelaysArray({ delay, step, amount }) {\n  const delays = [];\n  for (let i = 0; i < amount; i++) {\n    delays.push(parseInt(delay) + i * parseInt(step));\n  }\n\n  return delays;\n}\nNotiflix.Notify.info('Cogito ergo sum');\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","addEventListener","e","preventDefault","data","FormData","currentTarget","params","item","console","log","reset","promisesArray","delay","step","amount","delays","i","push","parseInt","$47d4ff9957288465$var$buildDelaysArray","map","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","ele","then","a","$parcel$interopDefault","Notify","success","catch","err","failure","info"],"version":3,"file":"03-promises.4f186708.js.map"}