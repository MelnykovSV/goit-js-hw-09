{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAASF,SAASC,cAAc,UA2CtC,SAASE,EAAgBC,EAAOC,EAAUC,GAkBxC,OAjBgB,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,GACFF,EAAQ,uBAAqBH,EAAY,QAASD,OAC9CC,EAAW,IAAMC,EAAMQ,SACzBZ,EAAOa,UAAW,KAGpBN,EAAO,sBAAoBJ,EAAU,QAASD,OAC1CC,EAAW,IAAMC,EAAMQ,SACzBZ,EAAOa,UAAW,G,GAGrBX,EAAM,G,CAxDbL,EAAKiB,iBAAiB,UAAUC,IAC9Bf,EAAOa,UAAW,EAElB,MAAMG,EAWR,SAAyBD,GACvBA,EAAEE,iBACF,MAAMC,EAAO,IAAIC,SAASJ,EAAEK,eACtBJ,EAAa,GAEnB,IAAKK,OAAQ,IAAIH,GACfI,QAAQC,IAAI,GAAGF,KAAK,aAAaA,KAAK,MACtCL,EAAWK,KAAK,IAAMA,KAAK,GAI7B,OADAxB,EAAK2B,QACER,C,CAtBYS,CAAgBV,IA6DrC,SAAsBW,GACpB,IAAKC,WAAWD,EACdC,QACGC,MAAKC,IACJC,EAAAnC,GAASoC,OAAOC,QAAQH,GACxBP,QAAQC,IAAIM,EAAE,IAEfI,OAAMC,IACLJ,EAAAnC,GAASoC,OAAOI,QAAQD,GACxBZ,QAAQC,IAAIW,EAAI,G,CAhEtBE,CAqBF,UAA0BlC,MAAEA,EAAKmC,KAAEA,EAAIC,OAAEA,IACvC,MAAMC,EAAS,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,IAC1BD,EAAOE,KAAKC,SAASxC,GAASsC,EAAIE,SAASL,IAG7C,OAAOE,C,CA/BaI,CAAiB3B,GAEH4B,IAAI3C,GAEX","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst button = document.querySelector('button');\n\nform.addEventListener('submit', e => {\n  button.disabled = true;\n\n  const formObject = geatherFormData(e);\n\n  const delaysArray = buildDelaysArray(formObject);\n\n  const promisesArray = delaysArray.map(generatePromise);\n\n  alertPromise(promisesArray);\n});\n\n//geathers data from form\n\nfunction geatherFormData(e) {\n  e.preventDefault();\n  const data = new FormData(e.currentTarget);\n  const formObject = {};\n\n  for (item of [...data]) {\n    console.log(`${item[0]} value: ${item[1]}`);\n    formObject[item[0]] = item[1];\n  }\n\n  form.reset();\n  return formObject;\n}\n\n//creates array of steps from data\n\nfunction buildDelaysArray({ delay, step, amount }) {\n  const delays = [];\n  for (let i = 0; i < amount; i++) {\n    delays.push(parseInt(delay) + i * parseInt(step));\n  }\n\n  return delays;\n}\n\n//generates a promise with given delay\n\nfunction generatePromise(delay, position, array) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n        if (position + 1 === array.length) {\n          button.disabled = false;\n        }\n      } else {\n        reject(`❌ Rejected promise ${position + 1} in ${delay}ms`);\n        if (position + 1 === array.length) {\n          button.disabled = false;\n        }\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\n//Alerts promise result\n\nfunction alertPromise(promisesArray) {\n  for (promise of promisesArray) {\n    promise\n      .then(a => {\n        Notiflix.Notify.success(a);\n        console.log(a);\n      })\n      .catch(err => {\n        Notiflix.Notify.failure(err);\n        console.log(err);\n      });\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$button","$47d4ff9957288465$var$generatePromise","delay","position","array","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","length","disabled","addEventListener","e","formObject","preventDefault","data","FormData","currentTarget","item","console","log","reset","$47d4ff9957288465$var$geatherFormData","promisesArray","promise","then","a","$parcel$interopDefault","Notify","success","catch","err","failure","$47d4ff9957288465$var$alertPromise","step","amount","delays","i","push","parseInt","$47d4ff9957288465$var$buildDelaysArray","map"],"version":3,"file":"03-promises.db6bf1a0.js.map"}